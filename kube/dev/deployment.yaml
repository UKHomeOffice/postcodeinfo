---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    downscaler/uptime: Mon-Fri 07:00-21:00 Europe/London
  name: pci
  labels:
    name: pci
    service: pci
spec:
  replicas: 1
  selector:
    matchLabels:
      name: pci
  template:
    metadata:
      labels:
        name: pci
        service: pci
    spec:
      containers:
        - name: pci
          image: quay.io/ukhomeofficedigital/postcodeinfo:{{.DRONE_COMMIT_SHA}}
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
          ports:
            - containerPort: 10080
              protocol: TCP
            - containerPort: 10443
              protocol: TCP
          args:
            - ./run.sh
          command:
            - sh
          envFrom:
          - configMapRef:
              name: pci-configmap
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postcodeinfo-rds
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: postcodeinfo-rds
            - name: DJANGO_DEBUG
              value: "True"
            - name: DJANGO_ALLOWED_HOSTS
              value: '[''*'']'
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  key: default_db
                  name: postcodeinfo-rds
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: endpoint
                  name: postcodeinfo-rds
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: postcodeinfo-rds
          resources:
            limits:
              cpu: "600m"
              memory: "512Mi"
            requests:
              cpu: "60m"
              memory: "128Mi"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /public
              name: public
      volumes:
        - name: public
          emptyDir: {}
        - name: configmap
          configMap:
            name: configmap
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
